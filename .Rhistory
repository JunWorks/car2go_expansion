wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(2, "Dark2"))
wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(15, "Dark2"))
wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm$word, dm$freq,min.freq = 2, scale=c(7,0.5),colors=brewer.pal(8, "Dark2"),  random.color= TRUE, random.order = FALSE, max.words = 150)
wordcloud(dm$word, dm$freq,min.freq = 2, scale=c(7,0.5),colors=brewer.pal(8, "Dark2"),  random.color= TRUE, random.order = FALSE, max.words = 250)
wordcloud(dm$word, dm$freq,min.freq = 2, scale=c(2,0.5),colors=brewer.pal(8, "Dark2"),  random.color= TRUE, random.order = FALSE, max.words = 250)
wordcloud(dm$word, dm$freq,min.freq = 2, scale=c(3,0.5),colors=brewer.pal(8, "Dark2"),  random.color= TRUE, random.order = FALSE, max.words = 250)
wordcloud(dm$word, dm$freq,min.freq = 2, scale=c(4,0.5),colors=brewer.pal(8, "Dark2"),  random.color= TRUE, random.order = FALSE, max.words = 250)
load("~/OneDrive/Kaggle DSB II/.RData")
rm(ls())
pbinom(14, 25, 0.5, lower.tail = F)
pbinom(15, 25, 0.5, lower.tail = F)
pbinom(12.5, 25, 0.5, lower.tail = F)
pbinom(13, 25, 0.5, lower.tail = F)
pnorm(-0.6)
pbinom(28, 50, 0.5, lower.tail = F)
pbinom(56, 100, 0.5, lower.tail = F)
pnorm(-1.2)
pbinom(5600, 10000, 0.5, lower.tail = F)
pbinom(140, 250, 0.5, lower.tail = F)
pbinom(224, 400, 0.5, lower.tail = F)
pnorm(-2.4)
(51/606 - 0.56)/sqrt(0.56*0.44/606)
(51/606 - 0.56)/sqrt(0.56*0.44/606)
sqrt(0.56*0.44/606)
51/606 - 0.56
51/606
(51/606 - 0.056)/sqrt(0.56*0.44/606)
pnorm(1.39, lower.tail = F)
(51/606 - 0.056)/sqrt(0.056*0.944/606)
pnorm(3.015, lower.tail = F)
pnorm(-2.25)
pnorm(0.34/0.4)
setwd("~/Dropbox/Data project/Car2goRMD")
setwd("G:/Dropbox/Data project/Car2goRMD")
library(ggplot2)
library(ggmap)
library(dplyr)
library(grid)
library(broom)
source('decodeLine.R')
source('init.R')
time.df <- read.csv('data/1Timedcar2go_week.csv', header = T)
head(time.df)
res <- revgeocode(c(time.df$Longitude[1], time.df$Latitude[1]), output="more")
res$postal_code
car.first.app <- subset(time.df, !duplicated(time.df[, c(-1,-15)], fromLast = F))
car.first.app <- car.first.app[duplicated(car.first.app[, 8]) | duplicated(car.first.app[, 8], fromLast = T),]
car.last.app <- subset(time.df, !duplicated(time.df[, c(-1,-15)], fromLast = T))
car.last.app <- car.last.app[duplicated(car.last.app[, 8]) | duplicated(car.last.app[, 8], fromLast = T),]
View(car.first.app)
View(car.last.app)
View(car.route.sub)
View(car.route.sub)
View(trip.info)
install.packages(zipcode)
install.packages("zipcode")
library(zipcode)
clean.zipcodes(car.last.app$address[1])
clean.zipcodes(car.last.app$address)
strsplit(car.last.app$address[1], split = ' ')
strsplit(car.last.app$address[1], split = ',')
car.last.app$address[1]
toString(car.last.app$address[1])
strsplit(toString(car.last.app$address[1]), split = ' ')
a <- strsplit(toString(car.last.app$address), split = ' ')
?match
a <- strsplit(toString(car.last.app$address[1]), split = ' ')
a <- unlist(strsplit(toString(car.last.app$address[1]), split = ' '))
pmatch("787", a)
pmatch("78731", a)
a(pmatch("78731", a))
a[pmatch("78731", a)]
i = 1
for (address in car.last.app$address){
add <- unlist(strsplit(toString(address), split = ' '))
zip <- add[pmatch('787', add)]
car.last.app$zip <- zip
i = i+1
}
View(car.last.app)
i = 1
for (address in car.last.app$address){
add <- unlist(strsplit(toString(address), split = ' '))
zip <- add[pmatch('787', add)]
car.last.app$zip[i] <- zip
i = i+1
}
count(is.na(car.last.app$zip))
sum(is.na(car.last.app$zip))
i = 1
for (address in car.first.app$address){
add <- unlist(strsplit(toString(address), split = ' '))
zip <- add[pmatch('787', add)]
car.first.app$zip[i] <- zip
i = i+1
}
View(car.first.app)
sum(is.na(car.first.app$zip))
View(car.first.app)
toString(res$postal_code)
revgeocode(c(time.df$Longitude[1], time.df$Latitude[1]), output="more")$postal_code
i=1
for (zip in car.last.app$zip[1:9]){
if (is.na(zip)){
car.last.app$zip[i] <- toString(revgeocode(c(car.last.app$Longitude[i], car.last.app$Latitude[i]), output="more")$postal_code)
}
i=i+1
}
i=1
for (zip in car.last.app$zip){
if (is.na(zip)){
car.last.app$zip[i] <- toString(revgeocode(c(car.last.app$Longitude[i], car.last.app$Latitude[i]), output="more")$postal_code)
}
i=i+1
}
distQueryCheck()
geocodeQueryCheck(userType = "free")
i=1
for (zip in car.first.app$zip){
if (is.na(zip)){
car.first.app$zip[i] <- toString(revgeocode(c(car.first.app$Longitude[i], car.first.app$Latitude[i]), output="more")$postal_code)
}
i=i+1
}
geocodeQueryCheck(userType = "free")
View(car.first.app)
setwd("G:/Dropbox/Data project/Car2goRMD")
write.csv(car.first.app[-1,], file = 'data/firstappearance.csv')
write.csv(car.last.app[-1,], file = 'data/lastappearance.csv')
View(car.first.app)
write.csv(car.first.app[,-1], file = 'data/firstappearance.csv')
write.csv(car.last.app[,-1], file = 'data/lastappearance.csv')
car.start.end <- rbind(car.last.app, car.first.app)
View(car.start.end)
car.start.end <- rbind(car.last.app[, -1], car.first.app[, -1])
View(car.start.end)
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n(zip)*0.5)
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n()*0.5)
View(trip.zip)
ggplot(data=trip.zip, aes(count)) +
geom_bar() +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(zip)) +
geom_bar() +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=zip, y=count)) +
geom_bar() +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=zip, y=count)) +
geom_bar(stat = "identity") +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n()*0.5)%>%
arrange(desc(count))
ggplot(data=trip.zip, aes(x=zip, y=count)) +
geom_bar(stat = "identity") +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=zip)) +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=zip)) +
#title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=zip) +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=factor(zip)) +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Distance (miles)", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
trip.zip[trip.zip$count<30][, 1] <- "Other"
trip.zip[trip.zip$count<30]
trip.zip$count<30
trip.zip$zip[trip.zip$count<30] <- "Other"
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n())
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n()*0.5)%>%
arrange(desc(count))
trip.zip$zip[trip.zip$count<30] <- "Other"
trip.zip <- trip.zip %>%
group_by(zip) %>%
summarise(count = n())
View(car.start.end)
View(trip.zip)
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n()*0.5)%>%
arrange(desc(count))
trip.zip$zip[trip.zip$count<30] <- "Other"
trip.zip <- trip.zip %>%
group_by(zip) %>%
summarise(count = sum(count))
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n()*0.5)%>%
arrange(desc(count))
trip.zip$zip[trip.zip$count<30] <- "Other"
trip.zip <- trip.zip %>%
group_by(zip) %>%
summarise(count = sum(count))%>%
arrange(desc(count))
ggplot(data=trip.zip, aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Travel Distance of Each Trip", 'Monday 12/07/2015') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=trip.zip, aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip <- ggplot(data=trip.zip, aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
png('plots/zip.png', width=640, height=480)
print(plot.zip)
dev.off()
trip.zip$zip[trip.zip$count<30]
trip.zip <- car.start.end %>%
group_by(zip) %>%
summarise(count = n()*0.5)%>%
arrange(desc(count))
trip.zip$zip[trip.zip$count<30]
ggplot(data=trip.zip, aes(x=factor(trip.zip$zip[trip.zip$count>30]), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(trip.zip$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 20) + theme(legend.position=none)
ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 20) + theme(legend.position='none')
ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 20) + theme(legend.position='none', axis.title = element_blank())
ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 20) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5, size=16))
plot.zip.1 <- ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip.2 <- ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 20) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5, size=16))
plot_inset <- function(name, p1, p2){
png(name, width=640, height=480)
grid.newpage()
v1<-viewport(width = 1, height = 1, x = 0.5, y = 0.5) #plot area for the main map
v2<-viewport(width = 0.4, height = 0.4, x = 0.78, y = 0.83) #plot area for the inset map
print(p1,vp=v1)
print(p2,vp=v2)
dev.off()
}
plot_inset('plots/zip2.png', plot.zip.1, plot.zip.2)
plot.zip.1 <- ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip.2 <- ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count, fill = count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 14) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5))
plot_inset <- function(name, p1, p2){
png(name, width=640, height=480)
grid.newpage()
v1<-viewport(width = 1, height = 1, x = 0.5, y = 0.5) #plot area for the main map
v2<-viewport(width = 0.4, height = 0.4, x = 0.78, y = 0.53) #plot area for the inset map
print(p1,vp=v1)
print(p2,vp=v2)
dev.off()
}
plot_inset('plots/zip2.png', plot.zip.1, plot.zip.2)
plot.zip.1 <- ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip.2 <- ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 14) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5))
plot_inset <- function(name, p1, p2){
png(name, width=640, height=480)
grid.newpage()
v1<-viewport(width = 1, height = 1, x = 0.5, y = 0.5) #plot area for the main map
v2<-viewport(width = 0.4, height = 0.4, x = 0.78, y = 0.53) #plot area for the inset map
print(p1,vp=v1)
print(p2,vp=v2)
dev.off()
}
plot_inset('plots/zip2.png', plot.zip.1, plot.zip.2)
plot.zip.1 <- ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip.2 <- ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 14) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5))
plot_inset <- function(name, p1, p2){
png(name, width=640, height=480)
grid.newpage()
v1<-viewport(width = 1, height = 1, x = 0.5, y = 0.5) #plot area for the main map
v2<-viewport(width = 0.4, height = 0.4, x = 0.78, y = 0.63) #plot area for the inset map
print(p1,vp=v1)
print(p2,vp=v2)
dev.off()
}
plot_inset('plots/zip2.png', plot.zip.1, plot.zip.2)
plot.zip.1 <- ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip.2 <- ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 14) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5))
plot_inset <- function(name, p1, p2){
png(name, width=640, height=480)
grid.newpage()
v1<-viewport(width = 1, height = 1, x = 0.5, y = 0.5) #plot area for the main map
v2<-viewport(width = 0.4, height = 0.4, x = 0.78, y = 0.62) #plot area for the inset map
print(p1,vp=v1)
print(p2,vp=v2)
dev.off()
}
plot_inset('plots/zip2.png', plot.zip.1, plot.zip.2)
plot.zip.1 <- ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip.2 <- ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 13) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5))
plot_inset <- function(name, p1, p2){
png(name, width=640, height=480)
grid.newpage()
v1<-viewport(width = 1, height = 1, x = 0.5, y = 0.5) #plot area for the main map
v2<-viewport(width = 0.4, height = 0.4, x = 0.74, y = 0.62) #plot area for the inset map
print(p1,vp=v1)
print(p2,vp=v2)
dev.off()
}
plot_inset('plots/zip2.png', plot.zip.1, plot.zip.2)
car.route.sub <- read.csv('data/Mondayroutetime.csv', header = T)
i <- 1
map <- get_map(location = 'austin', zoom = 10+i)
plot <- ggmap(map) + geom_path(aes(x = lon, y = lat, group = name), size = 1, data = car.route.sub, lineend = 'round', alpha = 0.1, color = '#D55E00') +
#geom_point(aes(x = Longitude, y = Latitude, color = name), data = car.app.sub, size =3)+
theme_tws_map() + theme(legend.position="none",axis.title = element_blank())
plot
png('plots/trip.png', width=640, height=640)
print(trip)
dev.off()
trip <- ggmap(map) + geom_path(aes(x = lon, y = lat, group = name), size = 1, data = car.route.sub, lineend = 'round', alpha = 0.1, color = '#D55E00') +
#geom_point(aes(x = Longitude, y = Latitude, color = name), data = car.app.sub, size =3)+
theme_tws_map() + theme(legend.position="none",axis.title = element_blank())
png('plots/trip.png', width=640, height=640)
print(trip)
dev.off()
map <- get_map(location = 'austin', zoom = 12)
trip <- ggmap(map) + geom_path(aes(x = lon, y = lat, group = name), size = 1, data = car.route.sub, lineend = 'round', alpha = 0.1, color = '#D55E00') +
#geom_point(aes(x = Longitude, y = Latitude, color = name), data = car.app.sub, size =3)+
theme_tws_map() + theme(legend.position="none",axis.title = element_blank())
png('plots/trip.png', width=1080, height=1080)
print(trip)
dev.off()
setwd("G:/Dropbox/Data project/car2go_expansion")
# plot trip count
plot.zip.1 <- ggplot(data=filter(trip.zip, count > 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count > 30)$zip)) +
title_with_subtitle("Trip count for each Zip in Austin, TX", 'A trip between two Zips counts as 0.5 for each Zip') +
labs(x="Zipcode", y="Count") +
theme_tws(base_size = 20) + theme(legend.position=c(0.9, 0.5))
plot.zip.2 <- ggplot(data=filter(trip.zip, count < 30), aes(x=factor(zip), y=count)) +
geom_bar(stat = "identity") +
scale_x_discrete(limits=unique(filter(trip.zip, count < 30)$zip)) +
theme_tws(base_size = 13) + theme(legend.position='none',
axis.title = element_blank(),
axis.text.x  = element_text(angle=45, vjust=0.5))
plot_inset <- function(name, p1, p2){
png(name, width=640, height=480)
grid.newpage()
v1<-viewport(width = 1, height = 1, x = 0.5, y = 0.5) #plot area for the main map
v2<-viewport(width = 0.4, height = 0.4, x = 0.74, y = 0.62) #plot area for the inset map
print(p1,vp=v1)
print(p2,vp=v2)
dev.off()
}
plot_inset('plots/zip2.png', plot.zip.1, plot.zip.2)
